<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ry.fu.esb.medicalpatron.mapper.MedicalFileMapper">
    <resultMap id="MedicalFileMap" type="com.ry.fu.esb.medicalpatron.model.ResInfo">
        <id column="id" property="id" jdbcType="VARCHAR"></id>
        <result column="file_path" property="filePath" jdbcType="VARCHAR"></result>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"></result>
        <result column="upload_time" property="uploadTime" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <select id="getCountByDoctorCode" resultType="java.lang.Integer">
        select count(id) from m_medical_file where doctor_Code = #{doctorCode} and status = '0'
        <if test="#{patientId != null}">
            and patient_id = #{patientId}
        </if>
    </select>

    <select id="findAllByDoctorCode" resultMap="MedicalFileMap">
        select id,file_path,file_name,upload_time from m_medical_file where doctor_Code = #{doctorCode} and status = '0' order by upload_time desc
    </select>

    <select id="getPagerByDoctorCode" resultMap="MedicalFileMap">
        SELECT * FROM
        ( SELECT a.*, ROWNUM RN FROM
        (select b.id as id,b.file_path as file_path,b.file_name as file_name,b.upload_time as upload_time from m_medical_file b where b.doctor_Code= #{doctorCode}
        <if test="#{patientId != null}">
            and patient_id = #{patientId}
        </if>
        and b.status = '0' order by b.upload_time desc,b.id desc) a
        WHERE ROWNUM &lt;= #{end})
        WHERE RN &gt;= #{start}
    </select>

    <!--<insert id="insertMedicalFile" parameterType="com.ry.fu.esb.medicalpatron.model.MedicalFile" useGeneratedKeys="true" flushCache="true">-->
    <!--<selectKey keyProperty="id" resultType="Long" order="BEFORE">-->
    <!--select M_MEDEDICAL_FILE_SEQ.nextval from dual-->
    <!--</selectKey>-->
    <!--insert into m_medical_file(id,file_path,bus_file_type,file_size,upload_time,status)-->
    <!--values(#{id},#{filePath},#{busFileType},#{fileSize},#{uploadTime},#{status})-->
    <!--</insert>-->
    <!--<insert id="insertBatch">-->
    <!--<foreach collection="medicalFiles" item="item" open="begin" close="end;">-->
    <!--insert into m_medical_file-->
    <!--(id,file_path,bus_file_type,file_size,upload_time,status-->
    <!--,doctor_id) values (M_MEDEDICAL_FILE_SEQ.nextval,#{item.filePath},#{item.busFileType},#{item.fileSize},-->
    <!--#{item.uploadTime},#{item.status},#{item.doctorId});-->
    <!--</foreach>-->
    <!--</insert>-->
    <insert id="insertBatch" parameterType="list">
        insert into m_medical_file(id,file_path,bus_file_type,file_size,upload_time,status,doctor_Code,patient_id,file_name)
        <foreach collection="medicalFiles" item="item" separator="union" open="select id,filePath,busFileType,fileSize,uploadTime,status,doctorCode,patientId,fileName from(" close=")">
            select #{item.id} id,#{item.filePath} filePath,#{item.busFileType} busFileType,#{item.fileSize} fileSize,
            #{item.uploadTime} uploadTime,#{item.status} status,#{item.doctorCode} doctorCode,#{item.patientId} patientId,#{item.fileName} fileName from dual
        </foreach>
    </insert>

    <update id="deleteBatchByIds" parameterType="list">
        update m_medical_file set status = '1' where status = '0' and id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

</mapper>